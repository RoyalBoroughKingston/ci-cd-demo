---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application that uses the ASP.NET Core framework running
  in Amazon Lambda.

Parameters:
  Environment:
    Type: String

  ProjectName:
    Type: String
  
  BucketName:
    Type: String

  Key:
    Type: String

Mappings:
  EnvironmentMapping:
    development:
      EnvironmentVariable: 'Development'
    staging:
      EnvironmentVariable: 'Staging'
    production:
      EnvironmentVariable: 'Production'

Resources:
  AspNetCoreIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AWSLambda_FullAccess
      - arn:aws:iam::aws:policy/SecretsManagerReadWrite 
      - arn:aws:iam::aws:policy/CloudWatchFullAccess
  
  AspNetCoreFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          ASPNETCORE_ENVIRONMENT:
            Fn::FindInMap:
              - EnvironmentMapping
              - Ref: Environment
              - EnvironmentVariable
      FunctionName: !Sub "${ProjectName}-${Environment}"
      Handler: !Ref ProjectName
      Runtime: dotnet6
      CodeUri:
        Bucket: !Ref BucketName
        Key: !Ref Key
      MemorySize: 256
      Timeout: 30
      Role: !GetAtt AspNetCoreIamRole.Arn
      Events:
        RootResource:
          Type: Api
          Properties:
            Path: "/{proxy+}"
            Method: ANY

