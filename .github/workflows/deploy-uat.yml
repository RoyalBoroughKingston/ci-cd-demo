# This workflow deploys the application to the UAT environment
name: 'Deploy to UAT'

# This workflow is triggered when a branch is merged to the develop branch and CI tests have passed
on:
  workflow_run:
    workflows: ["Run tests"]
    branches:
      - develop
    types:
      - completed
      
permissions:
  id-token: write # This is required for requesting the JWT to connect Github to AWS
  contents: read  # This is required for actions / checkout

env:
  REPO_NAME: ${{ github.event.repository.name }} # Set the repository name as a variable to use in the workflow
  BUCKET_NAME: ddt-build-files # Set the name of the root S3 bucket where the build files are stored

jobs:
  # Check CI tests are successful
  ci_tests_check:
    name: 'CI Tests Check'
    runs-on: ubuntu-latest
    steps:
      - name: 'Check CI Tests'
        id: check-status
        run: |
          # Check if CI tests have completed successfully
          if [[ "${{ github.event.workflow_run.conclusion }}" == "success" ]]; then
            echo "The CI tests are successful"
          else
            echo "The CI tests failed"
            exit 1
          fi
          
  # Deploy to UAT for User Acceptance Testing
  deploy_uat:
    name: 'Deploy to UAT'
    environment: uat
    runs-on: ubuntu-latest
    needs: ci_tests_check

    steps:              
    - name: 'Checkout repository'
      uses: actions/checkout@v3
      with:
        ref: develop

    - name: 'Update AppSettings to Environment'
      run: cp $REPO_NAME/appsettings.Uat.json $REPO_NAME/appsettings.json
    
    - name: 'Set up .NET Core'
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    
    - name: 'Build application files'
      run: dotnet publish --no-self-contained --runtime linux-x64 --configuration Release --output ./artifact/build ./$REPO_NAME/$REPO_NAME.csproj

    - name: 'Install zip functionality'
      uses: montudor/action-zip@v1

    - name: 'Zip up the build files'
      run: zip -qq -r ../build.zip .
      working-directory: artifact/build

    - name: 'Copy Cloudformation deployment template file'
      run: cp ./deployment.yml ./artifact/deployment.yml

    - name: 'Upload zipped build files'
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: ./artifact

    - name: 'Configure AWS Credentials'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::604486847222:role/API-Pipeline-Role
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: eu-north-1
        
    - name: 'Delete existing zipped build files in AWS'
      run: aws s3 rm s3://$BUCKET_NAME/$REPO_NAME/uat --recursive --exclude "*" --include "*.zip"
    
    - name: 'Upload zipped build files to AWS S3 bucket'
      run: aws s3 cp ./artifact/build.zip s3://$BUCKET_NAME/$REPO_NAME/uat/build-${{ github.run_number }}.zip

    - name: 'Create AWS CloudFormation Stack'
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: ${{ github.event.repository.name }}-stack-uat
        template: artifact/deployment.yml
        parameter-overrides: Environment=uat, ProjectName=${{ github.event.repository.name }}, BucketName=${{ env.BUCKET_NAME }}, Key=${{ github.event.repository.name }}/uat/${{ format('build-{0}.zip', github.run_number ) }}
        capabilities: CAPABILITY_IAM, CAPABILITY_AUTO_EXPAND
        no-fail-on-empty-changeset: "1"
